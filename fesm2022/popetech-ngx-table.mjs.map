{"version":3,"file":"popetech-ngx-table.mjs","sources":["../../../projects/ngx-table/src/lib/utils/hide.ts","../../../projects/ngx-table/src/lib/utils/min.ts","../../../projects/ngx-table/src/lib/utils/px.ts","../../../projects/ngx-table/src/lib/tools/data-table-resource.ts","../../../projects/ngx-table/src/lib/directives/column/column.directive.ts","../../../projects/ngx-table/src/lib/components/row/row.component.html","../../../projects/ngx-table/src/lib/components/row/row.component.ts","../../../projects/ngx-table/src/lib/types/default-translations.type.ts","../../../projects/ngx-table/src/lib/utils/drag.ts","../../../projects/ngx-table/src/lib/components/pagination/pagination.component.html","../../../projects/ngx-table/src/lib/components/pagination/pagination.component.ts","../../../projects/ngx-table/src/lib/components/table/table.component.html","../../../projects/ngx-table/src/lib/components/table/table.component.ts","../../../projects/ngx-table/src/lib/components/header/header.component.html","../../../projects/ngx-table/src/lib/components/header/header.component.ts","../../../projects/ngx-table/src/lib/ngx-table.module.ts","../../../projects/ngx-table/src/popetech-ngx-table.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2\n} from '@angular/core';\n\nfunction isBlank(obj: any): boolean {\n  return obj === undefined || obj === null;\n}\n\n@Directive({\n  selector: '[hide]'\n})\nexport class HideDirective {\n\n  private _prevCondition = false;\n  private _displayStyle: string;\n\n  constructor(private _elementRef: ElementRef, private renderer: Renderer2) {\n  }\n\n  @Input()\n  set hide(newCondition: boolean) {\n    this.initDisplayStyle();\n\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\n      this._prevCondition = true;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\n      this._prevCondition = false;\n      this.renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\n    }\n  }\n\n  private initDisplayStyle() {\n    if (this._displayStyle === undefined) {\n      const displayStyle = this._elementRef.nativeElement.style.display;\n      if (displayStyle !== 'none') {\n        this._displayStyle = displayStyle;\n      }\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'min'\n})\nexport class MinPipe implements PipeTransform {\n  transform(value: number[], args: string[]): any {\n    return Math.min.apply(null, value);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'px'\n})\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[] = []): any {\n    if (value === undefined) {\n      return;\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (typeof value === 'number') {\n      return value + 'px';\n    }\n  }\n}\n","import {DataTableParams} from '../types/data-table-params.type';\n\n\nexport class DataTableResource<T> {\n\n  constructor(private items: T[]) {\n  }\n\n  query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\n\n    let result: T[] = [];\n    if (filter) {\n      result = this.items.filter(filter);\n    } else {\n      result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\n    }\n\n    if (params.sortBy) {\n      result.sort((a: DataTableParams, b: DataTableParams) => {\n        if (typeof a[params.sortBy] === 'string') {\n          return a[params.sortBy].localeCompare(b[params.sortBy]);\n        } else {\n          return a[params.sortBy] - b[params.sortBy];\n        }\n      });\n      if (params.sortAsc === false) {\n        result.reverse();\n      }\n    }\n    if (params.offset !== undefined) {\n      if (params.limit === undefined) {\n        result = result.slice(params.offset, result.length);\n      } else {\n        result = result.slice(params.offset, params.offset + params.limit);\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(result));\n    });\n  }\n\n  count(): Promise<number> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(this.items.length));\n    });\n\n  }\n}\n","import {ContentChild, Directive, ElementRef, Input, OnInit} from '@angular/core';\nimport {DataTableRowComponent} from '../../components/row/row.component';\nimport {CellCallback} from '../../types/cell-callback.type';\n\n\n@Directive({\n  selector: 'data-table-column'\n})\nexport class DataTableColumnDirective implements OnInit {\n\n  private styleClassObject = {}; // for [ngClass]\n\n  // init:\n  @Input() header: string;\n  @Input() sortable = false;\n  @Input() resizable = false;\n  @Input() property: string;\n  @Input() styleClass: string;\n  @Input() cellColors: CellCallback;\n\n  // init and state:\n  @Input() width: number | string;\n  @Input() visible = true;\n\n  @ContentChild('dataTableCell', { static: true }) cellTemplate: ElementRef;\n  @ContentChild('dataTableHeader', { static: true }) headerTemplate: ElementRef;\n\n  getCellColor(row: DataTableRowComponent, index: number) {\n    if (this.cellColors !== undefined) {\n      return (<CellCallback>this.cellColors)(row.item, row, this, index);\n    }\n  }\n\n  ngOnInit() {\n    this._initCellClass();\n  }\n\n  private _initCellClass() {\n    if (!this.styleClass && this.property) {\n      if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n        this.styleClass = 'column-' + this.property;\n      } else {\n        this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n      }\n    }\n\n    if (this.styleClass != null) {\n      this.styleClassObject = {\n        [this.styleClass]: true\n      };\n    }\n  }\n}\n","<tr class=\"data-table-row\"\n    [title]=\"getTooltip()\"\n    [style.background-color]=\"dataTable.getRowColor(item, index, _this)\"\n    [class.row-odd]=\"index % 2 === 0\"\n    [class.row-even]=\"index % 2 === 1\"\n    [class.selected]=\"selected\"\n    [class.clickable]=\"dataTable.selectOnRowClick\">\n  <td [hide]=\"!dataTable.expandColumnVisible\">\n    <button (click)=\"expanded = !expanded; $event.stopPropagation()\" class=\"row-expand-button\"\n         [attr.aria-expanded]=\"expanded\"\n         [title]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n         [attr.aria-label]=\"dataTable.labels.expandRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\">\n      <i [ngClass]=\"{'fa-caret-right': !expanded, 'fa-caret-down': expanded}\" class=\"fa fa-lg\" aria-hidden=\"true\"></i>\n    </button>\n  </td>\n  <td [hide]=\"!dataTable.indexColumnVisible\" class=\"index-column\" [textContent]=\"displayIndex\"></td>\n  <td [hide]=\"!dataTable.selectColumnVisible\" class=\"select-column\">\n    <input\n           type=\"checkbox\" [(ngModel)]=\"selected\"\n           [title]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"\n           [attr.aria-label]=\"dataTable.labels.selectRow.replace('{cell_content}', ''+item[dataTable.primaryColumn])\"/>\n  </td>\n  <ng-template ngFor [ngForOf]=\"dataTable.columns\" let-column>\n    <th *ngIf=\"dataTable.primaryColumn === column.property\" scope=\"row\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </th>\n    <td *ngIf=\"dataTable.primaryColumn !== column.property\" [hide]=\"!column.visible\" [ngClass]=\"column.styleClassObject\"\n        class=\"data-column\"\n        [style.background-color]=\"column.getCellColor(_this, index)\">\n      <div *ngIf=\"!column.cellTemplate\" [textContent]=\"item[column.property]\"></div>\n      <div *ngIf=\"column.cellTemplate\" [ngTemplateOutlet]=\"column.cellTemplate\"\n           [ngTemplateOutletContext]=\"{column: column, row: _this, item: item}\"></div>\n    </td>\n  </ng-template>\n</tr>\n<tr *ngIf=\"dataTable.expandableRows\" [hide]=\"!expanded\" class=\"row-expansion\">\n  <td [attr.colspan]=\"dataTable.columnCount\">\n    <div [ngTemplateOutlet]=\"dataTable.expandTemplate\" [ngTemplateOutletContext]=\"{row: _this, item: item}\"></div>\n  </td>\n</tr>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: '[dataTableRow]',\n  templateUrl: './row.component.html',\n  styleUrls: ['./row.component.css']\n})\nexport class DataTableRowComponent implements OnInit, OnDestroy {\n\n  public _this = this;\n\n  @Input() item: any;\n  @Input() index: number;\n\n  expanded: boolean;\n\n  private _listeners = [];\n\n  // row selection:\n  private _selected: boolean;\n\n  @Output() selectedChange = new EventEmitter();\n\n  get selected() {\n    return this._selected;\n  }\n\n  set selected(selected) {\n    this._selected = selected;\n    this.selectedChange.emit(selected);\n  }\n\n  // other:\n  get displayIndex() {\n    if (this.dataTable.pagination) {\n      return this.dataTable.displayParams.offset + this.index + 1;\n    } else {\n      return this.index + 1;\n    }\n  }\n\n  getTooltip() {\n    if (this.dataTable.rowTooltip) {\n      return this.dataTable.rowTooltip(this.item, this, this.index);\n    }\n    return '';\n  }\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.dataTable.rowClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'click',\n          (event) => this.dataTable.rowClicked(this, event))\n      );\n    }\n    if (this.dataTable.rowDoubleClick.observers.length > 0) {\n      this._listeners.push(\n        this.renderer.listen(this.elementRef.nativeElement, 'dblclick',\n          (event) => this.dataTable.rowDoubleClicked(this, event))\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.selected = false;\n    this._listeners.forEach(fn => fn());\n  }\n}\n","import { DataTableTranslations } from './data-table-translations.type';\n\nexport const defaultTranslations: DataTableTranslations = {\n  headerReload: 'reload {title} table',\n  headerColumnSelector: 'column selector - adds or removes columns from {title} table',\n  headerColumnSelectorAdded: '{column_name} added to {title} table',\n  headerColumnSelectorRemoved: '{column_name} removed from {title} table',\n  indexColumn: 'index',\n  selectColumn: 'select',\n  selectRow: 'select {cell_content}',\n  selectAllRows: 'select all rows',\n  expandColumn: 'expand',\n  expandRow: 'expand {cell_content}',\n  sortedAscending: '{title} table sorted by {header} ascending',\n  sortedDescending: '{title} table sorted by {header} descending',\n  sortAscending: 'activate to sort ascending',\n  sortDescending: 'activate to sort descending',\n  paginationLimit: 'Limit',\n  paginationText: 'Results: {from} to {to} of {total}',\n  paginationTotalPages: 'of',\n  firstPage: 'first page',\n  prevPage: 'previous page',\n  pageNumberLabel: 'Page',\n  pageNumber: 'page number',\n  pageNumberNofM: '({N} of {M})',\n  nextPage: 'next page',\n  lastPage: 'last page',\n  loadingText: '{title} table is loading',\n  loadedText: '{title} table loaded'\n};\n","export type MoveHandler = (event: MouseEvent, dx: number, dy: number, x: number, y: number) => void;\nexport type UpHandler = (event: MouseEvent, x: number, y: number, moved: boolean) => void;\n\n/*tslint:disable-next-line*/\nexport function drag(event: MouseEvent, {move: move, up: up}: { move: MoveHandler, up?: UpHandler }) {\n\n  const startX = event.pageX;\n  const startY = event.pageY;\n  let x = startX;\n  let y = startY;\n  let moved = false;\n\n  function mouseMoveHandler(evt: MouseEvent) {\n    const dx = evt.pageX - x;\n    const dy = evt.pageY - y;\n    x = evt.pageX;\n    y = evt.pageY;\n    if (dx || dy) {\n      moved = true;\n    }\n\n    move(evt, dx, dy, x, y);\n\n    event.preventDefault(); // to avoid text selection\n  }\n\n  function mouseUpHandler(evt: MouseEvent) {\n    x = evt.pageX;\n    y = evt.pageY;\n\n    document.removeEventListener('mousemove', mouseMoveHandler);\n    document.removeEventListener('mouseup', mouseUpHandler);\n\n    if (up) {\n      up(event, x, y, moved);\n    }\n  }\n\n  document.addEventListener('mousemove', mouseMoveHandler);\n  document.addEventListener('mouseup', mouseUpHandler);\n}\n","<div class=\"row\">\n  <div class=\"pagination-range col\">\n    <span [textContent]=\"dataTable.labels.paginationText\n        .replace('{from}', this.Math.ceil(dataTable.itemCount / dataTable.limit) !== 0 ? dataTable.offset + 1 + '' : '0')\n        .replace('{to}', this.Math.min(dataTable.offset + dataTable.limit, dataTable.itemCount) + '')\n        .replace('{total}', dataTable.itemCount + '')\"></span>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"pagination-limit col-md-3\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <label [attr.for]=\"id + '-page-limit'\" class=\"input-group-text\" [textContent]=\"dataTable.labels.paginationLimit\"></label>\n      </div>\n      <select [id]=\"id + '-page-limit'\" class=\"form-control\" [(ngModel)]=\"limit\" [disabled]=\"dataTable.itemCount === 0\">\n        <option *ngFor=\"let l of limits\" [value]=\"l\">{{ l }}</option>\n      </select>\n    </div>\n  </div>\n  <div class=\"pagination-pages offset-md-3 col-md-6\">\n    <div class=\"pagination-page\">\n      <div class=\"input-group\">\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageFirst()\"\n                class=\"btn btn-default pagination-firstpage\"\n                [title]=\"dataTable.labels.firstPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">first page</span>\n        </button>\n        <button [disabled]=\"dataTable.offset <= 0\"\n                (click)=\"pageBack()\"\n                class=\"btn btn-default pagination-prevpage\"\n                [title]=\"dataTable.labels.prevPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">previous page</span>\n        </button>\n\n        <div class=\"input-group-prepend d-sm-block d-none\">\n          <label class=\"input-group-text\" [attr.for]=\"id + '-page-input'\">\n            {{ dataTable.labels.pageNumberLabel }}\n          </label>\n        </div>\n        <input #pageInput type=\"number\"\n               [id]=\"id + '-page-input'\"\n               class=\"form-control\" min=\"1\" step=\"1\" max=\"{{maxPage}}\"\n               [disabled]=\"dataTable.itemCount === 0\"\n               [ngModel]=\"page\"\n               (blur)=\"validate($event)\"\n               (keyup.enter)=\"validate($event)\"\n               (keyup.esc)=\"pageInput.value = page\"\n               [title]=\"dataTable.labels.pageNumber + ' ' +\n                    dataTable.labels.pageNumberNofM.replace('{N}', ''+page).replace('{M}', ''+maxPage)\"\n               [attr.aria-controls]=\"dataTable.id\"/>\n        <div class=\"input-group-append\">\n            <span class=\"input-group-text\">\n              {{ dataTable.labels.paginationTotalPages }}&nbsp;{{ dataTable.lastPage }}\n            </span>\n        </div>\n\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageForward()\"\n                class=\"btn btn-default pagination-nextpage\"\n                [title]=\"dataTable.labels.nextPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">next page</span>\n        </button>\n        <button [disabled]=\"(dataTable.offset + dataTable.limit) >= dataTable.itemCount\"\n                (click)=\"pageLast()\"\n                class=\"btn btn-default pagination-lastpage\"\n                [title]=\"dataTable.labels.lastPage\"\n                [attr.aria-controls]=\"dataTable.id\">\n          <i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">last page</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { DataTableComponent} from '../table/table.component';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class DataTablePaginationComponent {\n\n  id = `pagination-${nextId++}`;\n\n  @ViewChild('pageInput', { static: true }) pageInput: ElementRef;\n\n  Math: any;\n\n  @Input() limits: number[];\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent) {\n    this.Math = Math;\n  }\n\n  pageBack() {\n    this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);\n    if (this.dataTable.offset <= 0) {\n      this.pageInput.nativeElement.focus();\n    }\n}\n  pageForward() {\n    this.dataTable.offset += this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  pageFirst() {\n    this.dataTable.offset = 0;\n    this.pageInput.nativeElement.focus();\n  }\n\n  pageLast() {\n    this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;\n    if ((this.dataTable.offset + this.dataTable.limit) >= this.dataTable.itemCount) {\n      this.pageInput.nativeElement.focus();\n    }\n  }\n\n  get maxPage() {\n    return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);\n  }\n\n  get limit() {\n    return this.dataTable.limit;\n  }\n\n  set limit(value) {\n    this.dataTable.limit = +value;\n    // returning back to the first page.\n    this.page = 1;\n  }\n\n  get page() {\n    return this.dataTable.page;\n  }\n\n  set page(value) {\n    this.dataTable.page = +value;\n  }\n\n  validate(event) {\n    const newValue = +event.target.value;\n    if (newValue !== this.page) {\n      this.page = (event.target.value > this.maxPage) ? this.maxPage : (newValue < 1 ) ? 1 : newValue;\n      event.target.value = this.page;\n    }\n  }\n}\n","<div class=\"data-table-wrapper\">\n  <span class=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"text\">\n    <span [textContent]=\"reloadNotification\"></span>\n    <span [textContent]=\"paginationNotification\"></span>\n    <span [textContent]=\"sortNotification\"></span>\n    <span [textContent]=\"columnSelectorNotification\"></span>\n  </span>\n\n  <data-table-header *ngIf=\"header\"></data-table-header>\n\n  <div class=\"data-table-box\" [class]=\"wrapperClass\">\n    <table class=\"table data-table\" [id]=\"id\" tabindex=\"-1\">\n      <caption class=\"sr-only\" [textContent]=\"title\"></caption>\n      <thead>\n      <tr>\n        <td [hide]=\"!expandColumnVisible\" class=\"expand-column-header\">\n        </td>\n        <th scope=\"col\" [hide]=\"!indexColumnVisible\" class=\"index-column-header\">\n          <span [textContent]=\"indexColumnHeader\"></span>\n        </th>\n        <td [hide]=\"!selectColumnVisible\" class=\"select-column-header\">\n          <label [for]=\"id + '-select-all-column'\" class=\"sr-only\">\n            {{ labels.selectAllRows }}\n          </label>\n          <input\n            [id]=\"id + '-select-all-column'\"\n            [hide]=\"!multiSelect\"\n                 type=\"checkbox\"\n                 [(ngModel)]=\"selectAllCheckbox\"\n                 [disabled]=\"itemCount === 0\"\n                 [title]=\"labels.selectAllRows\"/>\n        </td>\n        <th *ngFor=\"let column of columns, index as i\" #th\n            [hide]=\"!column.visible\"\n            [class.sortable]=\"column.sortable\"\n            [class.resizable]=\"column.resizable\"\n            scope=\"col\"\n            [attr.aria-sort]=\"column.sortable ? (column.property === sortBy ? (sortAsc ? 'ascending' : 'descending') : 'none') : null\"\n            [ngClass]=\"column.styleClassObject\" class=\"column-header\" [style.width]=\"column.width | px\" >\n          <button *ngIf=\"column.sortable\" (click)=\"headerClicked(column, $event)\"\n                  [attr.aria-controls]=\"column.sortable ? id : null\"\n                  [disabled]=\"itemCount === 0\"\n                  [attr.aria-labelledby]=\"'col-'+id+'-'+i\"\n                  [title]=\"!sortAsc ? labels.sortAscending : labels.sortDescending\">\n            <span *ngIf=\"!column.headerTemplate\" [id]=\"'col-'+id+'-'+i\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [id]=\"'col-'+id+'-'+i\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n              <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                aria-hidden=\"true\"></i>\n              <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </button>\n          <span *ngIf=\"!column.sortable\">\n            <span *ngIf=\"!column.headerTemplate\"\n                  [textContent]=\"column.header\"></span>\n            <span *ngIf=\"column.headerTemplate\" [ngTemplateOutlet]=\"column.headerTemplate\"\n                  [ngTemplateOutletContext]=\"{column: column}\"></span>\n            <span class=\"column-sort-icon\" *ngIf=\"column.sortable\">\n               <i [hide]=\"column.property === sortBy\" class=\"fa fa-sort column-sortable-icon\"\n                  aria-hidden=\"true\"></i>\n               <i [hide]=\"column.property !== sortBy\" class=\"fa\"\n                  [ngClass]=\"{'fa-sort-asc': sortAsc, 'fa-sort-desc': !sortAsc}\" aria-hidden=\"true\"></i>\n            </span>\n            <span *ngIf=\"column.resizable\" class=\"column-resize-handle\"\n                  (mousedown)=\"resizeColumnStart($event, column, th)\"></span>\n          </span>\n        </th>\n      </tr>\n      </thead>\n      <tbody *ngFor=\"let item of items; let index=index\" class=\"data-table-row-wrapper\"\n             dataTableRow #row [item]=\"item\" [index]=\"index\" (selectedChange)=\"onRowSelectChanged(row)\">\n      </tbody>\n      <tbody *ngIf=\"itemCount === 0 && noDataMessage\">\n        <tr>\n          <td [attr.colspan]=\"columnCount\">{{ noDataMessage }}</td>\n        </tr>\n      </tbody>\n      <tbody class=\"substitute-rows\" *ngIf=\"pagination && substituteRows\">\n      <tr *ngFor=\"let item of substituteItems, let index = index\"\n          [class.row-odd]=\"(index + items.length) % 2 === 0\"\n          [class.row-even]=\"(index + items.length) % 2 === 1\" role=\"presentation\">\n        <td [hide]=\"!expandColumnVisible\"></td>\n        <td [hide]=\"!indexColumnVisible\">&nbsp;</td>\n        <td [hide]=\"!selectColumnVisible\"></td>\n        <td *ngFor=\"let column of columns\" [hide]=\"!column.visible\">\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"busy\" *ngIf=\"showReloading && reloading\">\n      <i><i class=\"fa fa-spin fa-cog fa-2x\"></i></i>\n    </div>\n  </div>\n\n  <data-table-pagination *ngIf=\"pagination\" [limits]=\"pageLimits\"></data-table-pagination>\n</div>\n","import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef, ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { DataTableColumnDirective } from '../../directives/column/column.directive';\nimport { DataTableRowComponent } from '../row/row.component';\nimport { DataTableParams } from '../../types/data-table-params.type';\nimport { RowCallback } from '../../types/row-callback.type';\nimport { DataTableTranslations } from '../../types/data-table-translations.type';\nimport { defaultTranslations } from '../../types/default-translations.type';\nimport { drag } from '../../utils/drag';\n\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { debounceTime, tap } from 'rxjs/operators';\nimport { DataTablePaginationComponent } from \"../pagination/pagination.component\";\n\nlet nextId = 0;\n\n@Component({\n  selector: 'data-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class DataTableComponent implements DataTableParams, OnInit, AfterContentInit, OnDestroy {\n\n  private _items: any[] = [];\n  private _itemCount;\n\n  @Input() wrapperClass;\n\n  @Input()\n  get items(): any[] {\n    return this._items;\n  }\n\n  set items(items: any[]) {\n    this._items = items;\n    // no need to call notifier.next() because _onReloadFinished()\n    // will change reloaded value causing notifier.next() to be called implicitly.\n    this._onReloadFinished();\n  }\n\n\n  @Input()\n  get itemCount(): number {\n    return this._itemCount;\n  }\n\n  set itemCount(count: number) {\n    this._itemCount = count;\n    this.notifier.next();\n  }\n\n  // UI components:\n  @ContentChildren(DataTableColumnDirective) columns: QueryList<DataTableColumnDirective>;\n  @ViewChildren(DataTableRowComponent) rows: QueryList<DataTableRowComponent>;\n\n  @ViewChild(DataTablePaginationComponent, {static: false}) paginator;\n\n  @ContentChild('dataTableExpand', { static: true }) expandTemplate: TemplateRef<any>;\n\n  // One-time optional bindings with default values:\n  @Input() title = '';\n  @Input() showTitle = true;\n  @Input() header = true;\n  @Input() pagination = true;\n  @Input() indexColumn = true;\n  @Input() indexColumnHeader = '';\n  @Input() rowColors: RowCallback;\n  @Input() rowTooltip: RowCallback;\n  @Input() selectColumn = false;\n  @Input() multiSelect = true;\n  @Input() substituteRows = true;\n  @Input() expandableRows = false;\n  @Input() labels: DataTableTranslations;\n  @Input() selectOnRowClick = false;\n  @Input() autoReload = true;\n  @Input() showReloading = false;\n  @Input() noDataMessage: string;\n  @Input() pageLimits: number[] = [10, 25, 50, 100, 250];\n  @Input() primaryColumn = '';\n\n  // reload emitter\n  @Output() reload = new EventEmitter();\n\n  // event handlers:\n  @Output() rowClick = new EventEmitter();\n  @Output() rowDoubleClick = new EventEmitter();\n  @Output() headerClick = new EventEmitter();\n  @Output() cellClick = new EventEmitter();\n  @Output() selectedRowsChange = new EventEmitter();\n  @Output() visibleColumnsChange = new EventEmitter();\n  // UI state without input:\n  indexColumnVisible: boolean;\n  selectColumnVisible: boolean;\n  expandColumnVisible: boolean;\n\n  // ada notifications.\n  reloadNotification: string;\n  paginationNotification: string;\n  sortNotification: string;\n  columnSelectorNotification: string;\n\n  _displayParams = <DataTableParams>{}; // params of the last finished reload\n\n  subject = new Subject<void>();\n  subject$: Subscription;\n\n  notifier = new Subject<void>();\n  notifier$: Subscription;\n\n  // selection:\n  selectedRow: DataTableRowComponent;\n  selectedRows: DataTableRowComponent[] = [];\n\n  Math: any;\n  id = `datatable-${nextId++}`;\n\n  // select all checkbox flag\n  private _selectAllCheckbox = false;\n\n  // column resizing:\n  private _resizeInProgress = false;\n\n  resizeLimit = 30;\n\n  // Reloading:\n  _reloading = false;\n\n  get reloading() {\n    return this._reloading;\n  }\n\n  set reloading(val: boolean) {\n    this._reloading = val;\n    this.notifier.next();\n  }\n\n  // UI state: visible get/set for the outside with @Input for one-time initial values\n  private _sortBy: string;\n\n  @Input()\n  get sortBy(): string {\n    return this._sortBy;\n  }\n\n  set sortBy(value: string) {\n    this._sortBy = value;\n    this.subject.next();\n  }\n\n  private _sortAsc = true;\n\n  @Input()\n  get sortAsc(): boolean {\n    return this._sortAsc;\n  }\n\n  set sortAsc(value: boolean) {\n    this._sortAsc = value;\n    this.subject.next();\n  }\n\n  private _offset = 0;\n\n  @Input()\n  get offset(): number {\n    return this._offset;\n  }\n\n  set offset(value: number) {\n    this._offset = value;\n    this.subject.next();\n  }\n\n  private _limit = 10;\n\n  @Input()\n  get limit(): number {\n    return this._limit;\n  }\n\n  set limit(value: number) {\n    this._limit = value;\n    this.subject.next();\n  }\n\n  // calculated property:\n  @Input()\n  get page() {\n    return this.itemCount !== 0 ? Math.floor(this.offset / this.limit) + 1 : 0;\n  }\n\n  set page(value) {\n    this.offset = (value - 1) * this.limit;\n  }\n\n  get lastPage() {\n    return Math.ceil(this.itemCount / this.limit);\n  }\n\n  // setting multiple observable properties simultaneously\n  sort(sortBy: string, asc: boolean) {\n    this.sortBy = sortBy;\n    this.sortAsc = asc;\n  }\n\n  // init\n  ngOnInit() {\n    this._initDefaultValues();\n    this._initDefaultClickEvents();\n    this._updateDisplayParams();\n\n    if (this.pageLimits.indexOf(this.limit) < 0) {\n      this.limit = this.pageLimits[0];\n    }\n\n    this.labels = {...defaultTranslations, ...this.labels};\n\n    if (this.autoReload) {\n      this.reloadItems();\n    }\n\n    this.notifier$ = this.notifier.subscribe(() => this._notify());\n    this.subject$ = this.subject.pipe(debounceTime(100)).subscribe(() => this.reloadItems());\n\n  }\n\n  private _initDefaultValues() {\n    this.indexColumnVisible = this.indexColumn;\n    this.selectColumnVisible = this.selectColumn;\n    this.expandColumnVisible = this.expandableRows;\n  }\n\n  private _initDefaultClickEvents() {\n    this.headerClick.subscribe(\n      (tableEvent: { column: DataTableColumnDirective, event: Event }) => this.sortColumn(tableEvent.column));\n    if (this.selectOnRowClick) {\n      this.rowClick.subscribe(\n        (tableEvent: { row: DataTableRowComponent, event: Event }) => tableEvent.row.selected = !tableEvent.row.selected);\n    }\n  }\n\n  reloadItems() {\n    this.reloading = true;\n    this.reload.emit(this._getRemoteParameters());\n  }\n\n  private _onReloadFinished() {\n    if (this.reloading) {\n      this._updateDisplayParams();\n      this._selectAllCheckbox = false;\n      this.reloading = false;\n    }\n  }\n\n  get displayParams() {\n    return this._displayParams;\n  }\n\n  _updateDisplayParams() {\n    this._displayParams = {\n      sortBy: this.sortBy,\n      sortAsc: this.sortAsc,\n      offset: this.offset,\n      limit: this.limit\n    };\n  }\n\n  constructor() {\n  }\n\n  public rowClicked(row: DataTableRowComponent, event: Event) {\n    this.rowClick.emit({row, event});\n  }\n\n  public rowDoubleClicked(row: DataTableRowComponent, event: Event) {\n    this.rowDoubleClick.emit({row, event});\n  }\n\n  public headerClicked(column: DataTableColumnDirective, event: Event) {\n    if (!this._resizeInProgress) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.headerClick.emit({column, event});\n    } else {\n      this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end\n    }\n  }\n\n  private cellClicked(column: DataTableColumnDirective, row: DataTableRowComponent, event: MouseEvent) {\n    this.cellClick.emit({row, column, event});\n  }\n\n  // functions:\n  private _getRemoteParameters(): DataTableParams {\n    const params = <DataTableParams>{};\n\n    if (this.sortBy) {\n      params.sortBy = this.sortBy;\n      params.sortAsc = this.sortAsc;\n    }\n    if (this.pagination) {\n      params.offset = this.offset;\n      params.limit = this.limit;\n    }\n    return params;\n  }\n\n  private sortColumn(column: DataTableColumnDirective) {\n    if (column.sortable) {\n\n      const ascending = this.sortBy === column.property ? !this.sortAsc : true;\n\n      if(column.property === this.sortBy &&  ! this.sortAsc) {\n        this.sort(undefined, true);\n        return;\n      }\n\n      this.sort(column.property, ascending);\n    }\n  }\n\n  get columnCount() {\n    let count = 0;\n    count += this.indexColumnVisible ? 1 : 0;\n    count += this.selectColumnVisible ? 1 : 0;\n    count += this.expandColumnVisible ? 1 : 0;\n    this.columns.toArray().forEach(column => {\n      count += column.visible ? 1 : 0;\n    });\n    return count;\n  }\n\n  public getRowColor(item: any, index: number, row: DataTableRowComponent) {\n    if (this.rowColors !== undefined) {\n      return (<RowCallback>this.rowColors)(item, row, index);\n    }\n  }\n\n  get selectAllCheckbox() {\n    return this._selectAllCheckbox;\n  }\n\n  set selectAllCheckbox(value) {\n    this._selectAllCheckbox = value;\n    this._onSelectAllChanged(value);\n  }\n\n  private _onSelectAllChanged(value: boolean) {\n    this.rows.toArray().forEach(row => row.selected = value);\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  onRowSelectChanged(row: DataTableRowComponent) {\n\n    // maintain the selectedRow(s) view\n    if (this.multiSelect) {\n      const index = this.selectedRows.indexOf(row);\n      if (row.selected && index < 0) {\n        this.selectedRows.push(row);\n      } else if (!row.selected && index >= 0) {\n        this.selectedRows.splice(index, 1);\n      }\n    } else {\n      if (row.selected) {\n        this.selectedRow = row;\n      } else if (this.selectedRow === row) {\n        delete this.selectedRow;\n      }\n    }\n\n    // unselect all other rows:\n    if (row.selected && !this.multiSelect) {\n      this.rows.toArray().filter(row_ => row_.selected).forEach(row_ => {\n        if (row_ !== row) { // avoid endless loop\n          row_.selected = false;\n        }\n      });\n    }\n\n    this.selectedRowsChange.emit(this.selectedRows);\n  }\n\n  // other:\n\n  get substituteItems() {\n    return Array.from({length: this.displayParams.limit - this.items.length});\n  }\n\n  public resizeColumnStart(event: MouseEvent, column: DataTableColumnDirective, columnElement: HTMLElement) {\n    this._resizeInProgress = true;\n    let startOffset = columnElement.offsetWidth - event.pageX;\n    drag(event, {\n      move: (moveEvent: MouseEvent, dx: number) => {\n        if (this._isResizeInLimit(columnElement, dx)) {\n          column.width = startOffset + moveEvent.pageX + dx;\n        }\n      },\n    });\n  }\n\n  private _isResizeInLimit(columnElement: HTMLElement, dx: number) {\n    /* This is needed because CSS min-width didn't work on table-layout: fixed.\n         Without the limits, resizing can make the next column disappear completely,\n         and even increase the table width. The current implementation suffers from the fact,\n         that offsetWidth sometimes contains out-of-date values. */\n    if ((dx < 0 && (columnElement.offsetWidth + dx) <= this.resizeLimit) ||\n      !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column\n      (dx >= 0 && ((<HTMLElement>columnElement.nextElementSibling).offsetWidth + dx) <= this.resizeLimit)) {\n      return false;\n    }\n    return true;\n  }\n\n  ngAfterContentInit(): void {\n    if (this.primaryColumn === '') {\n      this.primaryColumn = (this.columns.first as DataTableColumnDirective).property;\n    }\n  }\n\n  _notify(): void {\n    const loading = this.reloading;\n\n    this.reloadNotification = loading ?\n      this.labels.loadingText.replace('{title}', this.title) :\n      this.labels.loadedText.replace('{title}', this.title);\n\n    if (!loading) {\n      if (this.pagination) {\n        this.paginationNotification = this.labels.paginationText\n          .replace('{from}', '' + (Math.ceil(this.itemCount / this.limit) !== 0 ? this.offset + 1 : '0'))\n          .replace('{to}', '' + (Math.min(this.offset + this.limit, this.itemCount)))\n          .replace('{total}', '' + this.itemCount);\n      } else {\n        this.paginationNotification = '';\n      }\n      if (this.columns !== undefined && this.sortBy !== undefined) {\n        const col = this.columns.toArray().find(column => column.property === this.sortBy) as DataTableColumnDirective;\n        this.sortNotification = (this.sortAsc ? this.labels.sortedAscending : this.labels.sortedDescending)\n          .replace('{title}', this.title)\n          .replace('{header}', col.header);\n      } else {\n        this.sortNotification = '';\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subject$.unsubscribe();\n    this.notifier$.unsubscribe();\n  }\n}\n","<div class=\"data-table-header\">\n  <p class=\"h4 title\" *ngIf=\"dataTable.showTitle\" [textContent]=\"dataTable.title\"></p>\n  <div class=\"button-panel\">\n    <button type=\"button\" class=\"btn btn-default btn-sm refresh-button\"\n            (click)=\"dataTable.reloadItems()\">\n      <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerReload.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-default btn-sm column-selector-button\" [class.active]=\"columnSelectorOpen\"\n            [attr.aria-haspopup]=\"true\"\n            [attr.aria-expanded]=\"columnSelectorOpen\"\n            (click)=\"columnSelectorOpen = !columnSelectorOpen;\">\n      <i class=\"fa fa-list\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ dataTable.labels.headerColumnSelector.replace('{title}', dataTable.title) }}</span>\n    </button>\n    <div class=\"column-selector-wrapper\">\n      <div *ngIf=\"columnSelectorOpen\" class=\"column-selector-box panel panel-default\">\n        <ul class=\"list-group list-group-flush\">\n          <li *ngIf=\"dataTable.expandableRows\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.expandColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.expandColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.indexColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.indexColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.indexColumn\"></span>\n            </label>\n          </li>\n          <li *ngIf=\"dataTable.selectColumn\" class=\"list-group-item column-selector-column checkbox\">\n            <label class=\"d-flex align-items-center\">\n              <input type=\"checkbox\" [(ngModel)]=\"dataTable.selectColumnVisible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n              <span [textContent]=\"dataTable.labels.selectColumn\"></span>\n            </label>\n          </li>\n          <ng-template ngFor let-item let-i=\"index\" [ngForOf]=\"dataTable.columns\">\n            <li class=\"list-group-item column-selector-column checkbox\"\n                *ngIf=\"dataTable.primaryColumn !== item.property\">\n              <label class=\"d-flex align-items-center\">\n                <input type=\"checkbox\" [(ngModel)]=\"item.visible\" (change)=\"onChange($event)\" [attr.aria-controls]=\"dataTable.id\"/>\n                <span [textContent]=\"item.header\"></span>\n              </label>\n            </li>\n          </ng-template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject\n} from '@angular/core';\nimport { DataTableComponent } from '../table/table.component';\n\n@Component({\n  selector: 'data-table-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class DataTableHeaderComponent {\n\n  columnSelectorOpen = false;\n\n  constructor(@Inject(forwardRef(() => DataTableComponent)) public dataTable: DataTableComponent,\n              private elemRef: ElementRef) {\n  }\n\n  @HostListener('document:click', ['$event']) onClickHandler(event) {\n    if (!this.elemRef.nativeElement.contains(event.target)) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  @HostListener('document:keyup', ['$event']) onKeyUpHandler(event) {\n    if (event.keyCode === 27 || (event.keyCode === 9 && !this.elemRef.nativeElement.contains(event.target))) {\n      this.columnSelectorOpen = false;\n    }\n  }\n\n  onChange(event: Event) {\n    const isChecked = (<HTMLInputElement> event.target).checked;\n    const columnName = (<HTMLInputElement> event.target).parentElement.textContent.trim();\n    const interpolateParams = {\n      'column_name': columnName,\n      'title': this.dataTable.title\n    };\n\n    this.dataTable.visibleColumnsChange.emit(event);\n\n    this.dataTable.columnSelectorNotification = (isChecked ? this.dataTable.labels.headerColumnSelectorAdded :\n      this.dataTable.labels.headerColumnSelectorRemoved)\n      .replace('{column_name}', interpolateParams.column_name)\n      .replace('{title}', interpolateParams.title);\n  }\n}\n","// modules\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// utils\nimport { HideDirective } from './utils/hide';\nimport { MinPipe } from './utils/min';\nimport { PixelConverter } from './utils/px';\n// types & tools\nimport { DataTableTranslations } from './types/data-table-translations.type';\nimport { CellCallback } from './types/cell-callback.type';\nimport { RowCallback } from './types/row-callback.type';\nimport { DataTableResource } from './tools/data-table-resource';\nimport { DataTableParams } from './types/data-table-params.type';\n// components & directives\nimport { DataTableComponent } from './components/table/table.component';\nimport { DataTableRowComponent } from './components/row/row.component';\nimport { DataTableColumnDirective } from './directives/column/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTablePaginationComponent } from './components/pagination/pagination.component';\n\nexport {\n  DataTableComponent, DataTableColumnDirective, DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n  DataTableResource,\n  DataTableParams, DataTableTranslations,\n  CellCallback, RowCallback\n};\n\n@NgModule({\n  declarations: [\n    DataTableComponent, DataTableColumnDirective,\n    DataTableRowComponent, DataTablePaginationComponent, DataTableHeaderComponent,\n    PixelConverter, HideDirective, MinPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [DataTableComponent, DataTableColumnDirective]\n})\n\nexport class NgxTableModule {\n  public static forRoot(): ModuleWithProviders<NgxTableModule> {\n    return {\n      ngModule: NgxTableModule,\n      providers: []\n    };\n  }\n}\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_c2","_c0","_c1","nextId"],"mappings":";;;;;;;;;AAOA,SAAS,OAAO,CAAC,GAAQ,EAAA;AACvB,IAAA,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC3C,CAAC;MAKY,aAAa,CAAA;IAKxB,WAAoB,CAAA,WAAuB,EAAU,QAAmB,EAAA;QAApD,IAAW,CAAA,WAAA,GAAX,WAAW,CAAY;QAAU,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QAHhE,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;KAI9B;IAED,IACI,IAAI,CAAC,YAAqB,EAAA;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,QAAA,IAAI,YAAY,KAAK,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;AAC1E,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AAC3B,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;SAC3E;AAAM,aAAA,IAAI,CAAC,YAAY,KAAK,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;AACjF,YAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC5B,YAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACvF;KACF;IAEO,gBAAgB,GAAA;AACtB,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;YACpC,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;AAClE,YAAA,IAAI,YAAY,KAAK,MAAM,EAAE;AAC3B,gBAAA,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;aACnC;SACF;KACF;8EA5BU,aAAa,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAAb,aAAa,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;iFAAb,aAAa,EAAA,CAAA;cAHzB,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA,CAAA;mEAUK,IAAI,EAAA,CAAA;kBADP,KAAK;;;MChBK,OAAO,CAAA;IAClB,SAAS,CAAC,KAAe,EAAE,IAAc,EAAA;QACvC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACpC;wEAHU,OAAO,GAAA,CAAA,EAAA,CAAA,EAAA;6EAAP,OAAO,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;iFAAP,OAAO,EAAA,CAAA;cAHnB,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,KAAK;AACZ,aAAA,CAAA;;;MCAY,cAAc,CAAA;AACzB,IAAA,SAAS,CAAC,KAAsB,EAAE,IAAA,GAAiB,EAAE,EAAA;AACnD,QAAA,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO;SACR;AACD,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,YAAA,OAAO,KAAK,CAAC;SACd;AACD,QAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,KAAK,GAAG,IAAI,CAAC;SACrB;KACF;+EAXU,cAAc,GAAA,CAAA,EAAA,CAAA,EAAA;4EAAd,cAAc,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA;;iFAAd,cAAc,EAAA,CAAA;cAH1B,IAAI;AAAC,QAAA,IAAA,EAAA,CAAA;AACJ,gBAAA,IAAI,EAAE,IAAI;AACX,aAAA,CAAA;;;MCDY,iBAAiB,CAAA;AAE5B,IAAA,WAAA,CAAoB,KAAU,EAAA;QAAV,IAAK,CAAA,KAAA,GAAL,KAAK,CAAK;KAC7B;IAED,KAAK,CAAC,MAAuB,EAAE,MAAwD,EAAA;QAErF,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,IAAI,MAAM,EAAE;YACV,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACpC;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC7B;AAED,QAAA,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAkB,EAAE,CAAkB,KAAI;gBACrD,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;AACxC,oBAAA,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;iBACzD;qBAAM;AACL,oBAAA,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAC5C;AACH,aAAC,CAAC,CAAC;AACH,YAAA,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,EAAE;gBAC5B,MAAM,CAAC,OAAO,EAAE,CAAC;aAClB;SACF;AACD,QAAA,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;AAC/B,YAAA,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AAC9B,gBAAA,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;aACrD;iBAAM;AACL,gBAAA,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;aACpE;SACF;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,UAAU,CAAC,MAAM,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,SAAC,CAAC,CAAC;KACJ;IAED,KAAK,GAAA;QACH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,UAAU,CAAC,MAAM,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/C,SAAC,CAAC,CAAC;KAEJ;AACF;;;;MCxCY,wBAAwB,CAAA;AAHrC,IAAA,WAAA,GAAA;AAKU,QAAA,IAAA,CAAA,gBAAgB,GAAG,EAAE,CAAC;QAIrB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAOlB,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;AA8BzB,KAAA;IAzBC,YAAY,CAAC,GAA0B,EAAE,KAAa,EAAA;AACpD,QAAA,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;AACjC,YAAA,OAAsB,IAAI,CAAC,UAAW,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACpE;KACF;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,cAAc,GAAA;QACpB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YACrC,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACzC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;iBAAM;AACL,gBAAA,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aAC3E;SACF;AAED,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,gBAAgB,GAAG;AACtB,gBAAA,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI;aACxB,CAAC;SACH;KACF;yFA3CU,wBAAwB,GAAA,CAAA,EAAA,CAAA,EAAA;oEAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,uCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;iFAAxB,wBAAwB,EAAA,CAAA;cAHpC,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,QAAQ,EAAE,mBAAmB;AAC9B,aAAA,CAAA;gBAMU,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YAGG,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,OAAO,EAAA,CAAA;kBAAf,KAAK;YAE2C,YAAY,EAAA,CAAA;kBAA5D,YAAY;AAAC,YAAA,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YACI,cAAc,EAAA,CAAA;kBAAhE,YAAY;AAAC,YAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;;;;;;ICC7C,EAA8E,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;;IAA5C,EAAqC,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA;;;IACvE,EACgF,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;;AAA3E,IAD4B,yDAAwC,CACA,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAA,KAAA,EAAA,SAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;;IAL3E,EAEiE,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;AAE/D,IADA,0FAAwE,CAEE,CAAA,EAAA,uDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IAC5E,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IAJD,EAA4D,CAAA,WAAA,CAAA,kBAAA,EAAA,SAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAF6B,IAAzB,yCAAwB,CAAoC,SAAA,EAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;IAGxH,EAA0B,CAAA,SAAA,EAAA,CAAA;IAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,SAAA,CAAA,YAAA,CAAA,CAAA;IAC1B,EAAyB,CAAA,SAAA,EAAA,CAAA;IAAzB,EAAyB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,YAAA,CAAA,CAAA;;;IAM/B,EAA8E,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;;IAA5C,EAAqC,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA;;;IACvE,EACgF,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;;;;AAA3E,IAD4B,yDAAwC,CACA,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAAA,KAAA,EAAA,SAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;;IAL3E,EAEiE,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;AAE/D,IADA,0FAAwE,CAEE,CAAA,EAAA,uDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IAC5E,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IAJD,EAA4D,CAAA,WAAA,CAAA,kBAAA,EAAA,SAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAFiB,IAAzB,yCAAwB,CAAoC,SAAA,EAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;IAG5G,EAA0B,CAAA,SAAA,EAAA,CAAA;IAA1B,EAA0B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,SAAA,CAAA,YAAA,CAAA,CAAA;IAC1B,EAAyB,CAAA,SAAA,EAAA,CAAA;IAAzB,EAAyB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,YAAA,CAAA,CAAA;;;AAJjC,IAPA,kFAEiE,CAOA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;;IAT5D,EAAiD,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,KAAA,SAAA,CAAA,QAAA,CAAA,CAAA;IAOjD,EAAiD,CAAA,SAAA,EAAA,CAAA;IAAjD,EAAiD,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,KAAA,SAAA,CAAA,QAAA,CAAA,CAAA;;;AAUxD,IADF,8BAA8E,CACjC,CAAA,EAAA,IAAA,CAAA,CAAA;IACzC,EAA8G,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;AAElH,IADE,iBAAK,EACF,CAAA;;;IAJgC,EAAkB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;IACjD,EAAsC,CAAA,SAAA,EAAA,CAAA;;IACnC,EAA6C,CAAA,SAAA,EAAA,CAAA;AAAC,IAA9C,kEAA6C,CAAqD,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;MCtB9F,qBAAqB,CAAA;AAgBhC,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IAAI,QAAQ,CAAC,QAAQ,EAAA;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpC;;AAGD,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAC7D;aAAM;AACL,YAAA,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SACvB;KACF;IAED,UAAU,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;AAC7B,YAAA,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/D;AACD,QAAA,OAAO,EAAE,CAAC;KACX;AAED,IAAA,WAAA,CAAiE,SAA6B,EAC1E,QAAmB,EAAU,UAAsB,EAAA;QADN,IAAS,CAAA,SAAA,GAAT,SAAS,CAAoB;QAC1E,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QAAU,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;QAxChE,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;QAOZ,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;AAKd,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;KA4B6B;IAE3E,QAAQ,GAAA;AACN,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAChD,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,EACzD,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CACrD,CAAC;SACH;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACtD,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAClB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAC5D,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAC3D,CAAC;SACH;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;KACrC;AA9DU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,SAAA,6BAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,qBAAqB,uBAyCZ,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAzC7C,qBAAqB,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,KAAA,EAAAC,KAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,CAAA,aAAA,EAAA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,eAAA,EAAA,SAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,yBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,yBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;YDnBlC,EAMmD,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CACL,CAIsE,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;AAHxG,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,sDAAA,CAAA,MAAA,EAAA,EAAA,GAAA,CAAA,QAAA,GAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,OAA+B,wBAAwB,CAAC,EAAA,CAAA,CAAA;YAI9D,EAAgH,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAEpH,YADE,iBAAS,EACN,CAAA;YACL,EAAkG,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;AAEhG,YADF,6BAAkE,CAImD,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;YAF5F,EAAsB,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,6DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,QAAA,EAAA,MAAA,CAAA,KAAA,GAAA,CAAA,QAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AAG/C,YAJE,iBAGmH,EAChH,CAAA;YACL,EAA4D,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;YAgB9D,EAAK,CAAA,YAAA,EAAA,CAAA;YACL,EAA8E,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;;YArC1E,EAAoE,CAAA,WAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,SAAA,CAAA,WAAA,CAAA,GAAA,CAAA,IAAA,EAAA,GAAA,CAAA,KAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAIpE,YAHA,EAAiC,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,CAAA,CAAA,UAAA,EAAA,GAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,CACC,0BACP,CACmB,WAAA,EAAA,GAAA,CAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;YAL9C,EAAsB,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,UAAA,EAAA,CAAA,CAAA;YAMpB,EAAuC,CAAA,SAAA,EAAA,CAAA;YAAvC,EAAuC,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,CAAA;YAGpC,EAAgG,CAAA,SAAA,EAAA,CAAA;YAAhG,EAAgG,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,EAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA;;YAEhG,EAAoE,CAAA,SAAA,EAAA,CAAA;YAApE,EAAoE,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAAC,KAAA,EAAA,CAAA,GAAA,CAAA,QAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA;YAGvE,EAAsC,CAAA,SAAA,EAAA,CAAA;AAAsB,YAA5D,wDAAsC,CAAkD,aAAA,EAAA,GAAA,CAAA,YAAA,CAAA,CAAA;YACxF,EAAuC,CAAA,SAAA,EAAA,CAAA;YAAvC,EAAuC,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,CAAA;YAElB,EAAsB,CAAA,SAAA,EAAA,CAAA;YAAtB,EAAsB,CAAA,gBAAA,CAAA,SAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA;YACtC,EAAgG,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,EAAA,GAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA;;YAGtF,EAA6B,CAAA,SAAA,EAAA,CAAA;YAA7B,EAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA;YAiB7C,EAA8B,CAAA,SAAA,EAAA,CAAA;YAA9B,EAA8B,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA;;;iFCpBtB,qBAAqB,EAAA,CAAA;cALjC,SAAS;2BACE,gBAAgB,EAAA,QAAA,EAAA,gtFAAA,EAAA,MAAA,EAAA,CAAA,sZAAA,CAAA,EAAA,CAAA;;sBA6Cb,MAAM;AAAC,gBAAA,IAAA,EAAA,CAAA,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA;sEArC/C,IAAI,EAAA,CAAA;kBAAZ,KAAK;YACG,KAAK,EAAA,CAAA;kBAAb,KAAK;YASI,cAAc,EAAA,CAAA;kBAAvB,MAAM;;kFAdI,qBAAqB,EAAA,EAAA,SAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,qCAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACjB3B,MAAM,mBAAmB,GAA0B;AACxD,IAAA,YAAY,EAAE,sBAAsB;AACpC,IAAA,oBAAoB,EAAE,8DAA8D;AACpF,IAAA,yBAAyB,EAAE,sCAAsC;AACjE,IAAA,2BAA2B,EAAE,0CAA0C;AACvE,IAAA,WAAW,EAAE,OAAO;AACpB,IAAA,YAAY,EAAE,QAAQ;AACtB,IAAA,SAAS,EAAE,uBAAuB;AAClC,IAAA,aAAa,EAAE,iBAAiB;AAChC,IAAA,YAAY,EAAE,QAAQ;AACtB,IAAA,SAAS,EAAE,uBAAuB;AAClC,IAAA,eAAe,EAAE,4CAA4C;AAC7D,IAAA,gBAAgB,EAAE,6CAA6C;AAC/D,IAAA,aAAa,EAAE,4BAA4B;AAC3C,IAAA,cAAc,EAAE,6BAA6B;AAC7C,IAAA,eAAe,EAAE,OAAO;AACxB,IAAA,cAAc,EAAE,oCAAoC;AACpD,IAAA,oBAAoB,EAAE,IAAI;AAC1B,IAAA,SAAS,EAAE,YAAY;AACvB,IAAA,QAAQ,EAAE,eAAe;AACzB,IAAA,eAAe,EAAE,MAAM;AACvB,IAAA,UAAU,EAAE,aAAa;AACzB,IAAA,cAAc,EAAE,cAAc;AAC9B,IAAA,QAAQ,EAAE,WAAW;AACrB,IAAA,QAAQ,EAAE,WAAW;AACrB,IAAA,WAAW,EAAE,0BAA0B;AACvC,IAAA,UAAU,EAAE,sBAAsB;CACnC;;AC1BD;AACgB,SAAA,IAAI,CAAC,KAAiB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAwC,EAAA;AAEjG,IAAA,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,IAAA,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;IAC3B,IAAI,CAAC,GAAG,MAAM,CAAC;IACf,IAAI,CAAC,GAAG,MAAM,CAAC;IACf,IAAI,KAAK,GAAG,KAAK,CAAC;IAElB,SAAS,gBAAgB,CAAC,GAAe,EAAA;AACvC,QAAA,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;AACzB,QAAA,MAAM,EAAE,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;AACzB,QAAA,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AACd,QAAA,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AACd,QAAA,IAAI,EAAE,IAAI,EAAE,EAAE;YACZ,KAAK,GAAG,IAAI,CAAC;SACd;QAED,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAExB,QAAA,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;IAED,SAAS,cAAc,CAAC,GAAe,EAAA;AACrC,QAAA,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AACd,QAAA,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AAEd,QAAA,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC5D,QAAA,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;QAExD,IAAI,EAAE,EAAE;YACN,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;SACxB;KACF;AAED,IAAA,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AACzD,IAAA,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AACvD;;;;ICzBQ,EAA6C,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAO,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAS,CAAA,YAAA,EAAA,CAAA;;;IAA5B,EAAW,CAAA,UAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA;IAAC,EAAO,CAAA,SAAA,EAAA,CAAA;IAAP,EAAO,CAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;;ACL5D,IAAIC,QAAM,GAAG,CAAC,CAAC;MAOF,4BAA4B,CAAA;AAUvC,IAAA,WAAA,CAAiE,SAA6B,EAAA;QAA7B,IAAS,CAAA,SAAA,GAAT,SAAS,CAAoB;AAR9F,QAAA,IAAA,CAAA,EAAE,GAAG,CAAA,WAAA,EAAcA,QAAM,EAAE,EAAE,CAAC;AAS5B,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAED,QAAQ,GAAA;QACN,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC/E,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACtC;KACJ;IACC,WAAW,GAAA;QACT,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AAC9E,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACtC;KACF;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACtC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AAC9E,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACtC;KACF;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACnE;AAED,IAAA,IAAI,KAAK,GAAA;AACP,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KAC7B;IAED,IAAI,KAAK,CAAC,KAAK,EAAA;AACb,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC;;AAE9B,QAAA,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACf;AAED,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC5B;IAED,IAAI,IAAI,CAAC,KAAK,EAAA;AACZ,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC;KAC9B;AAED,IAAA,QAAQ,CAAC,KAAK,EAAA;QACZ,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AACrC,QAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE;AAC1B,YAAA,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAK,CAAC,GAAG,QAAQ,CAAC;YAChG,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;SAChC;KACF;AAnEU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,SAAA,oCAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,4BAA4B,uBAUnB,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAV7C,4BAA4B,EAAA,SAAA,EAAA,CAAA,CAAA,uBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;ADhBvC,YADF,8BAAiB,CACmB,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAChC,EAG0D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAE9D,YADE,iBAAM,EACF,CAAA;AAIA,YAHN,EAAiB,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CACwB,aACZ,CACU,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAC/B,EAAyH,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;YAC3H,EAAM,CAAA,YAAA,EAAA,CAAA;YACN,EAAkH,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;YAA3D,EAAmB,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,KAAA,EAAA,MAAA,CAAA,KAAA,GAAA,CAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YACxE,EAA6C,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;YAC/C,EAAS,CAAA,YAAA,EAAA,EACL,EACF,CAAA;AAIA,YAHN,EAAmD,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CACpB,cACF,CAKqB,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAHpC,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8DAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,eAAW,CAAC,CAAA,EAAA,CAAA,CAAA;YAI3B,EAA0D,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;YAC1D,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;YAAA,EAAU,CAAA,MAAA,CAAA,EAAA,EAAA,YAAA,CAAA,CAAA;AAClC,YADkC,iBAAO,EAChC,CAAA;YACT,EAI4C,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAHpC,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8DAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,cAAU,CAAC,CAAA,EAAA,CAAA,CAAA;YAI1B,EAAmD,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;YACnD,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;YAAA,EAAa,CAAA,MAAA,CAAA,EAAA,EAAA,eAAA,CAAA,CAAA;AACrC,YADqC,iBAAO,EACnC,CAAA;AAGP,YADF,gCAAmD,CACe,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;YAC9D,EACF,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AACF,YADE,iBAAQ,EACJ,CAAA;YACN,EAU4C,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA;AAHrC,YADA,EADQ,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,4DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAgB,KAAC,CACV,aAAA,EAAA,SAAA,mEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAgB,KAAC,CACI,WAAA,EAAA,SAAA,iEAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,YAAA,GAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,YAAA,CAAA,KAAA,GAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YAP3C,EAU4C,CAAA,YAAA,EAAA,CAAA;AAExC,YADJ,gCAAgC,CACG,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;YAC7B,EACF,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AACJ,YADI,iBAAO,EACL,CAAA;YAEN,EAI4C,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAHpC,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8DAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,iBAAa,CAAC,CAAA,EAAA,CAAA,CAAA;YAI7B,EAAoD,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;YACpD,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;YAAA,EAAS,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA,CAAA,CAAA;AACjC,YADiC,iBAAO,EAC/B,CAAA;YACT,EAI4C,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAHpC,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,8DAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,cAAU,CAAC,CAAA,EAAA,CAAA,CAAA;YAI1B,EAA2D,CAAA,SAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;YAC3D,EAAsB,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;YAAA,EAAS,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA,CAAA,CAAA;YAAA,iBAAO,EAC/B,EACL,EACF,EACF,EACF,CAAA;;YA9EI,EAG4C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAH5C,EAG4C,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,QAAA,EAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,SAAA,GAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,GAAA,GAAA,CAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,GAAA,CAAA,SAAA,CAAA,KAAA,EAAA,GAAA,CAAA,SAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,CAAA,OAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA,CAAA,SAAA,GAAA,EAAA,CAAA,CAAA,CAAA;YAOkB,EAAgD,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAhD,EAAgD,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,eAAA,CAAA,CAAA;;YAE1G,EAAyB,CAAA,SAAA,EAAA,CAAA;YAAzB,EAAyB,CAAA,UAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA,GAAA,aAAA,CAAA,CAAA;YAAsB,EAAmB,CAAA,gBAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA;YAAC,EAAsC,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,SAAA,CAAA,SAAA,KAAA,CAAA,CAAA,CAAA;YACzF,EAAS,CAAA,SAAA,EAAA,CAAA;YAAT,EAAS,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA;YAOvB,EAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAGlC,YAHA,oDAAkC,CAGE,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA;;YAKpC,EAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAGlC,YAHA,oDAAkC,CAGC,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;YAOT,EAA+B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;;YAC7D,EACF,CAAA,SAAA,EAAA,CAAA;YADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,eAAA,EAAA,GAAA,CAAA,CAAA;YAI2C,EAAiB,CAAA,SAAA,EAAA,CAAA;YAAjB,EAAiB,CAAA,qBAAA,CAAA,KAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;AAMvD,YAPA,EAAyB,CAAA,UAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA,GAAA,aAAA,CAAA,CAAA,UAAA,EAAA,GAAA,CAAA,SAAA,CAAA,SAAA,KAAA,CAAA,CAEa,qBACtB,CAKwE,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,GAAA,GAAA,GAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,GAAA,GAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,GAAA,GAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;YAIzF,EACF,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,GAAA,CAAA,SAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA;YAGI,EAAwE,CAAA,SAAA,EAAA,CAAA;AAGxE,YAHA,gGAAwE,CAGrC,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;YAKnC,EAAwE,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAGxE,YAHA,gGAAwE,CAGrC,OAAA,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;;;;iFCvDtC,4BAA4B,EAAA,CAAA;cALxC,SAAS;2BACE,uBAAuB,EAAA,QAAA,EAAA,i3HAAA,EAAA,MAAA,EAAA,CAAA,kGAAA,CAAA,EAAA,CAAA;;sBAcpB,MAAM;AAAC,gBAAA,IAAA,EAAA,CAAA,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA;qBANd,SAAS,EAAA,CAAA;kBAAlD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAI/B,MAAM,EAAA,CAAA;kBAAd,KAAK;;kFARK,4BAA4B,EAAA,EAAA,SAAA,EAAA,8BAAA,EAAA,QAAA,EAAA,mDAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;;;;ICTvC,EAAsD,CAAA,SAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,CAAA;;;IAoC5C,EAC2C,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;;;;;;AAArC,IAD+B,oDAAsB,CACxB,aAAA,EAAA,SAAA,CAAA,MAAA,CAAA,CAAA;;;IACnC,EAC0D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;;;;;;IADtB,EAAsB,CAAA,UAAA,CAAA,IAAA,EAAA,MAAA,GAAA,MAAA,CAAA,EAAA,GAAA,GAAA,GAAA,IAAA,CAAA,CAAA,kBAAA,EAAA,SAAA,CAAA,cAAA,CAA2C,CACnD,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,SAAA,CAAA,CAAA,CAAA;;;IAClD,EAAuD,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAGrD,IAFA,wBACyB,CAE+D,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IAC1F,EAAO,CAAA,YAAA,EAAA,CAAA;;;;IAJF,EAAmC,CAAA,SAAA,EAAA,CAAA;IAAnC,EAAmC,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,QAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA;IAEnC,EAAmC,CAAA,SAAA,EAAA,CAAA;AACpC,IADC,2DAAmC,CAC0B,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;IAElE,EAC0D,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAApD,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,SAAA,2EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,SAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,KAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAa,kDAAqC,CAAC,CAAA,EAAA,CAAA,CAAA;IAAC,EAAO,CAAA,YAAA,EAAA,CAAA;;;;IAhBnE,EAI0E,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AAJ1C,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,kEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,SAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAS,uCAA6B,CAAC,CAAA,EAAA,CAAA,CAAA;AAerE,IAVA,EACoC,CAAA,UAAA,CAAA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAEe,wEACI,CAOG,CAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAC5D,EAAS,CAAA,YAAA,EAAA,CAAA;;;;;;AAbD,IAFA,iDAA4B,CAEqC,OAAA,EAAA,CAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA,cAAA,CAAA,CAAA;;IAChE,EAA4B,CAAA,SAAA,EAAA,CAAA;IAA5B,EAA4B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA;IAE5B,EAA2B,CAAA,SAAA,EAAA,CAAA;IAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,cAAA,CAAA,CAAA;IAEF,EAAqB,CAAA,SAAA,EAAA,CAAA;IAArB,EAAqB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,QAAA,CAAA,CAAA;IAM9C,EAAsB,CAAA,SAAA,EAAA,CAAA;IAAtB,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,SAAA,CAAA,CAAA;;;IAI7B,EAC2C,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;IAArC,EAA6B,CAAA,UAAA,CAAA,aAAA,EAAA,SAAA,CAAA,MAAA,CAAA,CAAA;;;IACnC,EAC0D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;;;AAApD,IAD8B,2DAA0C,CAC5B,yBAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,SAAA,CAAA,CAAA,CAAA;;;IAClD,EAAuD,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAGpD,IAFA,wBAC0B,CAE+D,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;IAC5F,EAAO,CAAA,YAAA,EAAA,CAAA;;;;IAJD,EAAmC,CAAA,SAAA,EAAA,CAAA;IAAnC,EAAmC,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,QAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA;IAEnC,EAAmC,CAAA,SAAA,EAAA,CAAA;AACnC,IADA,2DAAmC,CAC2B,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;;;IAEpE,EAC0D,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAApD,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,SAAA,yEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,SAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,MAAA,KAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAa,kDAAqC,CAAC,CAAA,EAAA,CAAA,CAAA;IAAC,EAAO,CAAA,YAAA,EAAA,CAAA;;;IAZnE,EAA+B,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA;AAW7B,IAVA,EACoC,CAAA,UAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAEe,sEACI,CAOG,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAC5D,EAAO,CAAA,YAAA,EAAA,CAAA;;;IAZE,EAA4B,CAAA,SAAA,EAAA,CAAA;IAA5B,EAA4B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA;IAE5B,EAA2B,CAAA,SAAA,EAAA,CAAA;IAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,cAAA,CAAA,CAAA;IAEF,EAAqB,CAAA,SAAA,EAAA,CAAA;IAArB,EAAqB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,QAAA,CAAA,CAAA;IAM9C,EAAsB,CAAA,SAAA,EAAA,CAAA;IAAtB,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,SAAA,CAAA,CAAA;;;IApCjC,EAMiG,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA;;AAmB/F,IAlBA,gFAI0E,CAc3C,CAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;IAcjC,EAAK,CAAA,YAAA,EAAA,CAAA;;;;IAjCyD,EAAiC,CAAA,WAAA,CAAA,OAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,EAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AAH3F,IADA,8CAAkC,CACE,WAAA,EAAA,SAAA,CAAA,SAAA,CAAA,CAAA;AAGpC,IALA,yCAAwB,CAKW,SAAA,EAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;;IAC5B,EAAqB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAArB,EAAqB,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,CAAA,QAAA,CAAA,CAAA;IAkBvB,EAAsB,CAAA,SAAA,EAAA,CAAA;IAAtB,EAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;;;;IAiBjC,EACkG,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA;AAA3C,IAAA,EAAA,CAAA,UAAA,CAAA,gBAAA,EAAA,SAAA,oEAAA,GAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAkB,kCAAuB,CAAC,CAAA,EAAA,CAAA,CAAA;IACjG,EAAQ,CAAA,YAAA,EAAA,CAAA;;;;AAD+B,IAAd,+BAAa,CAAgB,OAAA,EAAA,SAAA,CAAA,CAAA;;;IAEtD,EAAgD,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,EAAA,IAAA,CAC1C,CAC+B,CAAA,EAAA,IAAA,CAAA,CAAA;IAAA,EAAmB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;IAAA,EAAK,CAAA,YAAA,EAAA,EACtD,EACC,CAAA;;;IAFA,EAA4B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;;IAAC,EAAmB,CAAA,SAAA,EAAA,CAAA;IAAnB,EAAmB,CAAA,iBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;;IAUtD,EAA4D,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;IAAzB,EAAwB,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;;;IAN7D,EAE4E,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAC1E,EAAuC,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IACvC,EAAiC,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAAA,EAAM,CAAA,MAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA;IAAA,EAAK,CAAA,YAAA,EAAA,CAAA;IAC5C,EAAuC,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IACvC,EAA4D,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAC9D,EAAK,CAAA,YAAA,EAAA,CAAA;;;;AALD,IADA,sEAAkD,CACC,UAAA,EAAA,CAAA,SAAA,GAAA,MAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;IACjD,EAA6B,CAAA,SAAA,EAAA,CAAA;IAA7B,EAA6B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,CAAA;IAC7B,EAA4B,CAAA,SAAA,EAAA,CAAA;IAA5B,EAA4B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,CAAA;IAC5B,EAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA7B,EAA6B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,CAAA;IACV,EAAU,CAAA,SAAA,EAAA,CAAA;IAAV,EAAU,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;;IAPnC,EAAoE,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IACpE,EAE4E,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAM5E,EAAQ,CAAA,YAAA,EAAA,CAAA;;;IARa,EAAoB,CAAA,SAAA,EAAA,CAAA;IAApB,EAAoB,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,eAAA,CAAA,CAAA;;;AAWzC,IADF,+BAAqD,CAChD,CAAA,EAAA,GAAA,CAAA,CAAA;IAAA,EAAuC,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;AAC5C,IAD4C,iBAAI,EAC1C,CAAA;;;IAGR,EAAwF,CAAA,SAAA,CAAA,CAAA,EAAA,uBAAA,EAAA,EAAA,CAAA,CAAA;;;IAA9C,EAAqB,CAAA,UAAA,CAAA,QAAA,EAAA,MAAA,CAAA,UAAA,CAAA,CAAA;;ACtEjE,IAAI,MAAM,GAAG,CAAC,CAAC;MAOF,kBAAkB,CAAA;AAO7B,IAAA,IACI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAI,KAAK,CAAC,KAAY,EAAA;AACpB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;QAGpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;AAGD,IAAA,IACI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,IAAI,SAAS,CAAC,KAAa,EAAA;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACtB;AA8ED,IAAA,IAAI,SAAS,GAAA;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,IAAI,SAAS,CAAC,GAAY,EAAA;AACxB,QAAA,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AACtB,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACtB;AAKD,IAAA,IACI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAI,MAAM,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;AAID,IAAA,IACI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAI,OAAO,CAAC,KAAc,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;AAID,IAAA,IACI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAI,MAAM,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;AAID,IAAA,IACI,KAAK,GAAA;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAI,KAAK,CAAC,KAAa,EAAA;AACrB,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;;AAGD,IAAA,IACI,IAAI,GAAA;QACN,OAAO,IAAI,CAAC,SAAS,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC5E;IAED,IAAI,IAAI,CAAC,KAAK,EAAA;AACZ,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;KACxC;AAED,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/C;;IAGD,IAAI,CAAC,MAAc,EAAE,GAAY,EAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;KACpB;;IAGD,QAAQ,GAAA;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAE5B,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YAC3C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACjC;AAED,QAAA,IAAI,CAAC,MAAM,GAAG,EAAC,GAAG,mBAAmB,EAAE,GAAG,IAAI,CAAC,MAAM,EAAC,CAAC;AAEvD,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KAE1F;IAEO,kBAAkB,GAAA;AACxB,QAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC;AAC3C,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;AAC7C,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;KAChD;IAEO,uBAAuB,GAAA;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,SAAS,CACxB,CAAC,UAA8D,KAAK,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1G,QAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,CACrB,CAAC,UAAwD,KAAK,UAAU,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACrH;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KAC/C;IAEO,iBAAiB,GAAA;AACvB,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC5B,YAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAChC,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;KACF;AAED,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,oBAAoB,GAAA;QAClB,IAAI,CAAC,cAAc,GAAG;YACpB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC;KACH;AAED,IAAA,WAAA,GAAA;QApPQ,IAAM,CAAA,MAAA,GAAU,EAAE,CAAC;;QAqClB,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;QACX,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACjB,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;QACd,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QACnB,IAAiB,CAAA,iBAAA,GAAG,EAAE,CAAC;QAGvB,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;QACrB,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;QACnB,IAAc,CAAA,cAAA,GAAG,IAAI,CAAC;QACtB,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;QAEvB,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;QACzB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;AAEtB,QAAA,IAAA,CAAA,UAAU,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAa,CAAA,aAAA,GAAG,EAAE,CAAC;;AAGlB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;;AAG5B,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;AACpC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAE,CAAC;AACjC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;AAC/B,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,YAAY,EAAE,CAAC;AACxC,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;AAYpD,QAAA,IAAA,CAAA,cAAc,GAAoB,EAAE,CAAC;AAErC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;AAG9B,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAK/B,IAAY,CAAA,YAAA,GAA4B,EAAE,CAAC;AAG3C,QAAA,IAAA,CAAA,EAAE,GAAG,CAAA,UAAA,EAAa,MAAM,EAAE,EAAE,CAAC;;QAGrB,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;;QAG3B,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;QAElC,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;;QAGjB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QAwBX,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAYhB,IAAO,CAAA,OAAA,GAAG,CAAC,CAAC;QAYZ,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;KA+FnB;IAEM,UAAU,CAAC,GAA0B,EAAE,KAAY,EAAA;QACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;KAClC;IAEM,gBAAgB,CAAC,GAA0B,EAAE,KAAY,EAAA;QAC9D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;KACxC;IAEM,aAAa,CAAC,MAAgC,EAAE,KAAY,EAAA;AACjE,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;SACxC;aAAM;AACL,YAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;KACF;AAEO,IAAA,WAAW,CAAC,MAAgC,EAAE,GAA0B,EAAE,KAAiB,EAAA;AACjG,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;KAC3C;;IAGO,oBAAoB,GAAA;QAC1B,MAAM,MAAM,GAAoB,EAAE,CAAC;AAEnC,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;AACf,YAAA,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,YAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;SAC/B;AACD,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,YAAA,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC3B;AACD,QAAA,OAAO,MAAM,CAAC;KACf;AAEO,IAAA,UAAU,CAAC,MAAgC,EAAA;AACjD,QAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;YAEnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAEzE,YAAA,IAAG,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,IAAK,CAAE,IAAI,CAAC,OAAO,EAAE;AACrD,gBAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBAC3B,OAAO;aACR;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;SACvC;KACF;AAED,IAAA,IAAI,WAAW,GAAA;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAA,KAAK,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,CAAC;AACzC,QAAA,KAAK,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1C,QAAA,KAAK,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,MAAM,IAAG;AACtC,YAAA,KAAK,IAAI,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,KAAK,CAAC;KACd;AAEM,IAAA,WAAW,CAAC,IAAS,EAAE,KAAa,EAAE,GAA0B,EAAA;AACrE,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,OAAqB,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;SACxD;KACF;AAED,IAAA,IAAI,iBAAiB,GAAA;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,IAAI,iBAAiB,CAAC,KAAK,EAAA;AACzB,QAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AAChC,QAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KACjC;AAEO,IAAA,mBAAmB,CAAC,KAAc,EAAA;AACxC,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACjD;AAED,IAAA,kBAAkB,CAAC,GAA0B,EAAA;;AAG3C,QAAA,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,GAAG,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE;AAC7B,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC7B;iBAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,KAAK,IAAI,CAAC,EAAE;gBACtC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aACpC;SACF;aAAM;AACL,YAAA,IAAI,GAAG,CAAC,QAAQ,EAAE;AAChB,gBAAA,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;AAAM,iBAAA,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG,EAAE;gBACnC,OAAO,IAAI,CAAC,WAAW,CAAC;aACzB;SACF;;QAGD,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,IAAG;AAC/D,gBAAA,IAAI,IAAI,KAAK,GAAG,EAAE;AAChB,oBAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACvB;AACH,aAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACjD;;AAID,IAAA,IAAI,eAAe,GAAA;QACjB,OAAO,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC;KAC3E;AAEM,IAAA,iBAAiB,CAAC,KAAiB,EAAE,MAAgC,EAAE,aAA0B,EAAA;AACtG,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,WAAW,GAAG,aAAa,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,IAAI,EAAE,CAAC,SAAqB,EAAE,EAAU,KAAI;gBAC1C,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE;oBAC5C,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;iBACnD;aACF;AACF,SAAA,CAAC,CAAC;KACJ;IAEO,gBAAgB,CAAC,aAA0B,EAAE,EAAU,EAAA;AAC7D;;;AAG+D;AAC/D,QAAA,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,EAAE,KAAK,IAAI,CAAC,WAAW;AACjE,YAAA,CAAC,aAAa,CAAC,kBAAkB;AACjC,aAAC,EAAE,IAAI,CAAC,IAAI,CAAe,aAAa,CAAC,kBAAmB,CAAC,WAAW,GAAG,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE;AACrG,YAAA,OAAO,KAAK,CAAC;SACd;AACD,QAAA,OAAO,IAAI,CAAC;KACb;IAED,kBAAkB,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,aAAa,KAAK,EAAE,EAAE;YAC7B,IAAI,CAAC,aAAa,GAAI,IAAI,CAAC,OAAO,CAAC,KAAkC,CAAC,QAAQ,CAAC;SAChF;KACF;IAED,OAAO,GAAA;AACL,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;AAE/B,QAAA,IAAI,CAAC,kBAAkB,GAAG,OAAO;AAC/B,YAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;AACtD,YAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAExD,IAAI,CAAC,OAAO,EAAE;AACZ,YAAA,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,gBAAA,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc;AACrD,qBAAA,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;qBAC9F,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;qBAC1E,OAAO,CAAC,SAAS,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5C;iBAAM;AACL,gBAAA,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;aAClC;AACD,YAAA,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;gBAC3D,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,CAA6B,CAAC;gBAC/G,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB;AAC/F,qBAAA,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;AAC9B,qBAAA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;aACpC;iBAAM;AACL,gBAAA,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;aAC5B;SACF;KACF;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AAC5B,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAC9B;mFA5aU,kBAAkB,GAAA,CAAA,EAAA,CAAA,EAAA;oEAAlB,kBAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,YAAA,CAAA,CAAA,EAAA,cAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;wCA+BZ,wBAAwB,EAAA,CAAA,CAAA,CAAA;;;;;;2BAG9B,4BAA4B,EAAA,CAAA,CAAA,CAAA;2BAFzB,qBAAqB,EAAA,CAAA,CAAA,CAAA;;;;;;ADlEnC,YADF,8BAAgC,CACkE,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAI9F,YAHA,EAAgD,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CACI,cACN,CACU,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;YAC1D,EAAO,CAAA,YAAA,EAAA,CAAA;YAEP,EAAkC,CAAA,UAAA,CAAA,CAAA,EAAA,+CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,CAAA,CAAA;AAGhC,YADF,8BAAmD,CACO,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CAAA;YACtD,EAAyD,CAAA,SAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,CAAA,CAAA;AAEzD,YADA,8BAAO,CACH,EAAA,EAAA,IAAA,CAAA,CAAA;YACF,EACK,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;YACL,EAAyE,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;YACvE,EAA+C,CAAA,SAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;YACjD,EAAK,CAAA,YAAA,EAAA,CAAA;AAEH,YADF,+BAA+D,CACJ,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;YACvD,EACF,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;YAAA,EAAQ,CAAA,YAAA,EAAA,CAAA;YACR,EAMuC,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;YAFhC,EAA+B,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,2DAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,KAAA,GAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AAGxC,YAPE,iBAMuC,EACpC,CAAA;YACL,EAMiG,CAAA,UAAA,CAAA,EAAA,EAAA,iCAAA,EAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;AAmCnG,YADA,iBAAK,EACG,CAAA;YACR,EACkG,CAAA,UAAA,CAAA,EAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAElD,CAKoB,EAAA,EAAA,oCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;YAUtE,EAAQ,CAAA,YAAA,EAAA,CAAA;YACR,EAAqD,CAAA,UAAA,CAAA,EAAA,EAAA,kCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;YAGvD,EAAM,CAAA,YAAA,EAAA,CAAA;YAEN,EAAgE,CAAA,UAAA,CAAA,EAAA,EAAA,oDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,uBAAA,EAAA,EAAA,CAAA,CAAA;YAClE,EAAM,CAAA,YAAA,EAAA,CAAA;;YAjGI,EAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAlC,EAAkC,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,CAAA,CAAA;YAClC,EAAsC,CAAA,SAAA,EAAA,CAAA;YAAtC,EAAsC,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,sBAAA,CAAA,CAAA;YACtC,EAAgC,CAAA,SAAA,EAAA,CAAA;YAAhC,EAAgC,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,gBAAA,CAAA,CAAA;YAChC,EAA0C,CAAA,SAAA,EAAA,CAAA;YAA1C,EAA0C,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;YAG9B,EAAY,CAAA,SAAA,EAAA,CAAA;YAAZ,EAAY,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,MAAA,CAAA,CAAA;YAEJ,EAAsB,CAAA,SAAA,EAAA,CAAA;YAAtB,EAAsB,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;YAChB,EAAS,CAAA,SAAA,EAAA,CAAA;YAAT,EAAS,CAAA,UAAA,CAAA,IAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA;YACd,EAAqB,CAAA,SAAA,EAAA,CAAA;YAArB,EAAqB,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA;YAGxC,EAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA7B,EAA6B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA;YAEjB,EAA4B,CAAA,SAAA,EAAA,CAAA;YAA5B,EAA4B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,CAAA;YACpC,EAAiC,CAAA,SAAA,EAAA,CAAA;YAAjC,EAAiC,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,CAAA;YAErC,EAA6B,CAAA,SAAA,EAAA,CAAA;YAA7B,EAA6B,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA;YACxB,EAAiC,CAAA,SAAA,EAAA,CAAA;YAAjC,EAAiC,CAAA,UAAA,CAAA,KAAA,EAAA,GAAA,CAAA,EAAA,GAAA,oBAAA,CAAA,CAAA;YACtC,EACF,CAAA,SAAA,EAAA,CAAA;YADE,EACF,CAAA,kBAAA,CAAA,GAAA,EAAA,GAAA,CAAA,MAAA,CAAA,aAAA,EAAA,GAAA,CAAA,CAAA;YAEE,EAAgC,CAAA,SAAA,EAAA,CAAA;AAChC,YADA,kDAAgC,CACX,MAAA,EAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAAA;YAEhB,EAA+B,CAAA,gBAAA,CAAA,SAAA,EAAA,GAAA,CAAA,iBAAA,CAAA,CAAA;AAE/B,YADA,8CAA4B,CACE,OAAA,EAAA,GAAA,CAAA,MAAA,CAAA,aAAA,CAAA,CAAA;YAEhB,EAAY,CAAA,SAAA,EAAA,CAAA;YAAZ,EAAY,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA;YA0Cb,EAAU,CAAA,SAAA,EAAA,CAAA;YAAV,EAAU,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA;YAG1B,EAAsC,CAAA,SAAA,EAAA,CAAA;YAAtC,EAAsC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,KAAA,CAAA,IAAA,GAAA,CAAA,aAAA,CAAA,CAAA;YAKd,EAAkC,CAAA,SAAA,EAAA,CAAA;YAAlC,EAAkC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,UAAA,IAAA,GAAA,CAAA,cAAA,CAAA,CAAA;YAWjD,EAAgC,CAAA,SAAA,EAAA,CAAA;YAAhC,EAAgC,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,aAAA,IAAA,GAAA,CAAA,SAAA,CAAA,CAAA;YAK7B,EAAgB,CAAA,SAAA,EAAA,CAAA;YAAhB,EAAgB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,UAAA,CAAA,CAAA;;;iFC/D7B,kBAAkB,EAAA,CAAA;cAL9B,SAAS;2BACE,YAAY,EAAA,QAAA,EAAA,yxKAAA,EAAA,MAAA,EAAA,CAAA,w7CAAA,CAAA,EAAA,CAAA;oBASb,YAAY,EAAA,CAAA;kBAApB,KAAK;YAGF,KAAK,EAAA,CAAA;kBADR,KAAK;YAcF,SAAS,EAAA,CAAA;kBADZ,KAAK;YAWqC,OAAO,EAAA,CAAA;kBAAjD,eAAe;mBAAC,wBAAwB,CAAA;YACJ,IAAI,EAAA,CAAA;kBAAxC,YAAY;mBAAC,qBAAqB,CAAA;YAEuB,SAAS,EAAA,CAAA;kBAAlE,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA,4BAA4B,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAA;YAEL,cAAc,EAAA,CAAA;kBAAhE,YAAY;AAAC,YAAA,IAAA,EAAA,CAAA,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;YAGxC,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YACG,iBAAiB,EAAA,CAAA;kBAAzB,KAAK;YACG,SAAS,EAAA,CAAA;kBAAjB,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,YAAY,EAAA,CAAA;kBAApB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YACG,cAAc,EAAA,CAAA;kBAAtB,KAAK;YACG,cAAc,EAAA,CAAA;kBAAtB,KAAK;YACG,MAAM,EAAA,CAAA;kBAAd,KAAK;YACG,gBAAgB,EAAA,CAAA;kBAAxB,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,aAAa,EAAA,CAAA;kBAArB,KAAK;YAGI,MAAM,EAAA,CAAA;kBAAf,MAAM;YAGG,QAAQ,EAAA,CAAA;kBAAjB,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,WAAW,EAAA,CAAA;kBAApB,MAAM;YACG,SAAS,EAAA,CAAA;kBAAlB,MAAM;YACG,kBAAkB,EAAA,CAAA;kBAA3B,MAAM;YACG,oBAAoB,EAAA,CAAA;kBAA7B,MAAM;YAmDH,MAAM,EAAA,CAAA;kBADT,KAAK;YAaF,OAAO,EAAA,CAAA;kBADV,KAAK;YAaF,MAAM,EAAA,CAAA;kBADT,KAAK;YAaF,KAAK,EAAA,CAAA;kBADR,KAAK;YAYF,IAAI,EAAA,CAAA;kBADP,KAAK;;kFArKK,kBAAkB,EAAA,EAAA,SAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,yCAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;;IClC7B,EAAoF,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;IAApC,EAA+B,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA;;;;IAiBvE,EAA6F,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAClD,CAC6F,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IAA7G,EAA2C,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,4EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAU,uBAAgB,CAAC,CAAA,EAAA,CAAA,CAAA;IAA9F,EAAoI,CAAA,YAAA,EAAA,CAAA;IACpI,EAA2D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAE/D,IADE,iBAAQ,EACL,CAAA;;;IAHsB,EAA2C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA3C,EAA2C,CAAA,gBAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,CAAA;;IAC5D,EAA6C,CAAA,SAAA,EAAA,CAAA;IAA7C,EAA6C,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA,CAAA,CAAA;;;;IAGvD,EAA0F,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAC/C,CAC4F,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IAA5G,EAA0C,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,4EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAU,uBAAgB,CAAC,CAAA,EAAA,CAAA,CAAA;IAA7F,EAAmI,CAAA,YAAA,EAAA,CAAA;IACnI,EAA0D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAE9D,IADE,iBAAQ,EACL,CAAA;;;IAHsB,EAA0C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1C,EAA0C,CAAA,gBAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,CAAA,CAAA;;IAC3D,EAA4C,CAAA,SAAA,EAAA,CAAA;IAA5C,EAA4C,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA;;;;IAGtD,EAA2F,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAChD,CAC6F,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IAA7G,EAA2C,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,4EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,KAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAU,uBAAgB,CAAC,CAAA,EAAA,CAAA,CAAA;IAA9F,EAAoI,CAAA,YAAA,EAAA,CAAA;IACpI,EAA2D,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAE/D,IADE,iBAAQ,EACL,CAAA;;;IAHsB,EAA2C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA3C,EAA2C,CAAA,gBAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,CAAA,CAAA;;IAC5D,EAA6C,CAAA,SAAA,EAAA,CAAA;IAA7C,EAA6C,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA,CAAA,CAAA;;;;IAIrD,EACsD,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CACX,CAC4E,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IAA5F,EAA0B,CAAA,gBAAA,CAAA,eAAA,EAAA,SAAA,0FAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,OAAA,EAAA,MAAA,CAAA,KAAA,OAAA,CAAA,OAAA,GAAA,MAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAC,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,mFAAA,CAAA,MAAA,EAAA,EAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,MAAA,GAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,WAAA,CAAU,uBAAgB,CAAC,CAAA,EAAA,CAAA,CAAA;IAA7E,EAAmH,CAAA,YAAA,EAAA,CAAA;IACnH,EAAyC,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;AAE7C,IADE,iBAAQ,EACL,CAAA;;;;IAHsB,EAA0B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA1B,EAA0B,CAAA,gBAAA,CAAA,SAAA,EAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;IAC3C,EAA2B,CAAA,SAAA,EAAA,CAAA;IAA3B,EAA2B,CAAA,UAAA,CAAA,aAAA,EAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;;IAJrC,EACsD,CAAA,UAAA,CAAA,CAAA,EAAA,2DAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;;IAAjD,EAA+C,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,KAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;;AArBxD,IADF,+BAAgF,CACtC,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;AAmBtC,IAlBA,EAA6F,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAMH,kEAMC,CAMnB,CAAA,EAAA,sDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,EAAA,CAAA,CAAA;AAU5E,IADE,iBAAK,EACD,CAAA;;;IA5BG,EAA8B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA9B,EAA8B,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA;IAM9B,EAA2B,CAAA,SAAA,EAAA,CAAA;IAA3B,EAA2B,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA,CAAA;IAM3B,EAA4B,CAAA,SAAA,EAAA,CAAA;IAA5B,EAA4B,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,SAAA,CAAA,YAAA,CAAA,CAAA;IAMS,EAA6B,CAAA,SAAA,EAAA,CAAA;IAA7B,EAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA;;MCtBpE,wBAAwB,CAAA;IAInC,WAAiE,CAAA,SAA6B,EAC1E,OAAmB,EAAA;QAD0B,IAAS,CAAA,SAAA,GAAT,SAAS,CAAoB;QAC1E,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;QAHvC,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;KAI1B;AAE2C,IAAA,cAAc,CAAC,KAAK,EAAA;AAC9D,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AACtD,YAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;KACF;AAE2C,IAAA,cAAc,CAAC,KAAK,EAAA;AAC9D,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,KAAK,KAAK,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;AACvG,YAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;KACF;AAED,IAAA,QAAQ,CAAC,KAAY,EAAA;AACnB,QAAA,MAAM,SAAS,GAAuB,KAAK,CAAC,MAAO,CAAC,OAAO,CAAC;AAC5D,QAAA,MAAM,UAAU,GAAuB,KAAK,CAAC,MAAO,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACtF,QAAA,MAAM,iBAAiB,GAAG;AACxB,YAAA,aAAa,EAAE,UAAU;AACzB,YAAA,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK;SAC9B,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEhD,QAAA,IAAI,CAAC,SAAS,CAAC,0BAA0B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,yBAAyB;AACtG,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B;AAChD,aAAA,OAAO,CAAC,eAAe,EAAE,iBAAiB,CAAC,WAAW,CAAC;AACvD,aAAA,OAAO,CAAC,SAAS,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAChD;AAlCU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,SAAA,gCAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,wBAAwB,uBAIf,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEAJ7C,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,YAAA,EAAA,SAAA,qCAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA;AAAxB,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,iDAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAsB,CAAA,cAAA,CAAA,MAAA,CAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,CAAE,CAAxB,OAAA,EAAA,SAAA,iDAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,cAAA,CAAA,MAAA,CAAsB,CAAE,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,CAAA;;YDdrC,EAA+B,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAC7B,EAAgF,CAAA,UAAA,CAAA,CAAA,EAAA,qCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAE9E,YADF,8BAA0B,CAEkB,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;AAAlC,YAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,yDAAA,GAAA,EAAA,OAAS,2BAAuB,CAAC,EAAA,CAAA,CAAA;YACvC,EAAgD,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;YAChD,EAAsB,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;YAAA,EAAuE,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAC/F,YAD+F,iBAAO,EAC7F,CAAA;YACT,EAG4D,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,CAAA;YAApD,EAAmD,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,yDAAA,GAAA,EAAA,OAAA,GAAA,CAAA,kBAAA,GAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,CAAA;YACzD,EAA6C,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA,CAAA;YAC7C,EAAsB,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;YAAA,EAA+E,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AACvG,YADuG,iBAAO,EACrG,CAAA;YACT,EAAqC,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YACnC,EAAgF,CAAA,UAAA,CAAA,EAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YA+BlF,EAAM,CAAA,YAAA,EAAA,EACF,EACF,CAAA;;YAhDiB,EAAyB,CAAA,SAAA,EAAA,CAAA;YAAzB,EAAyB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA;YAKpB,EAAuE,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAvE,EAAuE,CAAA,iBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;YAEnB,EAAmC,CAAA,SAAA,EAAA,CAAA;YAAnC,EAAmC,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,kBAAA,CAAA,CAAA;;YAKvF,EAA+E,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA/E,EAA+E,CAAA,iBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,MAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;YAG/F,EAAwB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAxB,EAAwB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,kBAAA,CAAA,CAAA;;;iFCFvB,wBAAwB,EAAA,CAAA;cALpC,SAAS;2BACE,mBAAmB,EAAA,QAAA,EAAA,kgGAAA,EAAA,MAAA,EAAA,CAAA,8mBAAA,CAAA,EAAA,CAAA;;sBAQhB,MAAM;AAAC,gBAAA,IAAA,EAAA,CAAA,UAAU,CAAC,MAAM,kBAAkB,CAAC,CAAA;8CAIZ,cAAc,EAAA,CAAA;kBAAzD,YAAY;mBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;YAME,cAAc,EAAA,CAAA;kBAAzD,YAAY;mBAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAA;;kFAd/B,wBAAwB,EAAA,EAAA,SAAA,EAAA,0BAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;ACdrC;MA2Ca,cAAc,CAAA;AAClB,IAAA,OAAO,OAAO,GAAA;QACnB,OAAO;AACL,YAAA,QAAQ,EAAE,cAAc;AACxB,YAAA,SAAS,EAAE,EAAE;SACd,CAAC;KACH;+EANU,cAAc,GAAA,CAAA,EAAA,CAAA,EAAA;mEAAd,cAAc,EAAA,CAAA,CAAA,EAAA;uEANvB,YAAY;YACZ,WAAW,CAAA,EAAA,CAAA,CAAA,EAAA;;iFAKF,cAAc,EAAA,CAAA;cAb1B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;AACR,gBAAA,YAAY,EAAE;AACZ,oBAAA,kBAAkB,EAAE,wBAAwB;oBAC5C,qBAAqB,EAAE,4BAA4B,EAAE,wBAAwB;oBAC7E,cAAc,EAAE,aAAa,EAAE,OAAO;AACvC,iBAAA;AACD,gBAAA,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;AACZ,iBAAA;AACD,gBAAA,OAAO,EAAE,CAAC,kBAAkB,EAAE,wBAAwB,CAAC;AACxD,aAAA,CAAA;;wFAEY,cAAc,EAAA,EAAA,YAAA,EAAA,CAXvB,kBAAkB,EAAE,wBAAwB;QAC5C,qBAAqB,EAAE,4BAA4B,EAAE,wBAAwB;AAC7E,QAAA,cAAc,EAAE,aAAa,EAAE,OAAO,aAGtC,YAAY;QACZ,WAAW,CAAA,EAAA,OAAA,EAAA,CAEH,kBAAkB,EAAE,wBAAwB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AARpD,EAAA,CAAA,mBAAA,CAAA,kBAAkB,EAClB,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,4BAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,CAAA,OAAA,EAAA,qBAAqB,EAAE,4BAA4B,EAAE,wBAAwB;AAC7D,IAAA,aAAa,IAA7B,cAAc,CAAA,CAAA;;AClClB;;AAEG;;;;"}